# * Each node has a list of metadata:
# - 1 - pretty name (displayed). Note, the node name/identifier itself is also meaningful as the fieldname in the data struct. 
# - 2 - type (see PropertiesGUIProp.m for options)
# - 3 - isEditable
# - 4 - description
# - 5 - default value
# - 6 - visualization function
# - 7 - level - one of {'Important','Beginner','Advanced','Developer'}. All important features need to be reset for each project. Default values should work for all non-Important features, but better results could potentially be achieved by changing these. The rest of the parameters are split into those that often are helpful to adjust (Beginner), those that should be rarely adjusted (Intermediate), and those that only someone working with a developer should touch. This property is only used for leaf nodes. Level of non-leaf nodes is based on maximum level of children, with important being highest, developer being lowest. 
# - 8 - requirements - some parameters will only be used in certain kinds of projects. list here keys for including these parameters. Non-leaf nodes included if any child node is included. 
# * After the metadata comes a list of child nodes.
# * As a shortcut, leaf nodes can contain the metadata directly as their value.
ROOT:
  - ['','',false,DUMMY,'','','','']
  - CPR:
    - ['','',false,Settings for Cascaded Pose Regression (CPR),'','','','']
    - NumMajorIter: ['Num regression stages',unsigned,true,'Number of stages of regression. Each stage of regression predicts an update to the current pose estimate. More stages generally perform better, but are also slower in both training and tracking. If the training accuracy is poor, consider increasing the number of stages.',50,'','Advanced','']
    - NumMinorIter: ['Num boosted regressors',unsigned,true,'Number of regressors (random ferns) combined (ensembled) in each stage of regression. More regressors generally performs better, but are also slower in both training and tracking. If the training accuracy is poor, consider increasing the number of stages.',30,'','Advanced','']
    - Ferns:
      - ['','',false,Random ferns,'','','','']
      - Depth: ['',unsigned,true,'Depth of the random fern, similar to the depth of a decision tree. This corresponds to the number of features used for fern binning. Larger depths may improve accuracy if the training accuracy is poor.',5,'','Advanced','']
      - Threshold:
        - ['','',false,Random fern thresholds,'','','','']
        - Lo: ['',float,true,'Random ferns are constructed very randomly. (Somewhat) random features are chosen and then they are thresholded at randomly chosen values. Set the lower range of the thresholds here. Features should be in the range of -1 to 1.',-.2,'','Advanced','']
        - Hi: ['',float,true,'Random ferns are constructed very randomly. (Somewhat) random features are chosen and then they are thresholded at randomly chosen values. Set the upper range of the thresholds here. Features should be in the range of -1 to 1.',.2,'','Advanced','']
      - RegFactor: ['Regularization Factor',float,true,Regularization factor (used when a fern bin has very low counts),.01,'']
    - Feature:
      - ['','',false,Feature generation,'','']
      - Type: ['',['two landmark elliptical','single landmark','2lm','2lmdiff'],true,Method/type of feature generation.,'2lm','ParameterVisualizationFeature#feature1']
      - Radius: ['',float,true,Distance (single landmark) or distance scalefactor (two landmark) for feature generation.,1.5,'ParameterVisualizationFeature#feature1']
      - ABRatio: ['Major/minor ratio',float,true,Ratio of ellipse major/minor axes (for Type='two landmark elliptical').,2,'ParameterVisualizationFeature#feature1']
      - Metatype: ['Meta feature',['single','diff'],true,Feature combination strategy to form ''true'' features.,'diff','']
      - NGenerate: ['Pool size',unsigned,true,Number of features to generate/consider at each major iteration.,400,'']
      - Nsample_std: ['Num samples std',unsigned,true,Number of samples used to approximate SD during feature selection.,1000,'']
      - Nsample_cor: ['Num samples correlation',unsigned,true,Number of samples used to compute correlation during feature selection.,5000,'']
    - RotCorrection:
      - ['Rotational Invariance','',false,Rotational invariance for randomly-oriented animals.,'','']
      - OrientationType: ['Orientation',['fixed','arbitrary','arbitrary trx-specified'],true,Specification of animal orientation.,'fixed','']
      - HeadPoint: ['Head landmark',unsigned,true,Landmark/point representing animal ''Head''. Used when orientation is not fixed.,1,'']
      - TailPoint: ['Tail landmark',unsigned,true,Landmark/point representing animal ''Tail''. Used when orientation is not fixed.,2,'']
    - Replicates:
      - ['','',false,'','','']
      - NrepTrain: ['Num training replicates',unsigned,true,Training set augmentation factor. Each training shape is utilized/replicated this many times.,50,'']
      - NrepTrack: ['Num tracking replicates',unsigned,true,Number of replicates to use when tracking. The final tracking result is estimated from a central measure of the replicate cloud.,50,'']
      - DoPtJitter: ['Jitter initial shapes',boolean,true,'Jitter/randomize individual landmarks in initial shapes.',true,'']
      - PtJitterFac: ['Initial shape jitter/randomization factor',float,true,'Points in initial shape are randomized/jittered by the reciprocal of this factor. For instance, a value of 12 indicates jittering by 1/12th of the image/ROI size.',12,'']
      - DoBBoxJitter: ['Jitter initial shape locations',boolean,true,'Jitter initial shape centroids/locations.',true,'']
      - AugJitterFac: ['Initial shape location jitter/randomization factor',float,true,'Jitter initial shape centroid by the reciprocal of this factor. For instance, a value of 12 indicates that initial shapes will be shifted by 1/12th of the image/ROI size.',16,'']
      - AugUseFF: ['Maximize spread of initial conditions',boolean,true,Maximize distance between training/tracking initial conditions.,false,''] # CONFIRM TIED TOGETHER
    - Prune:
      - ['','',false,Estimation of final tracking result from replicate cloud,'','']
      - Method: ['',['median','maxdensity','maxdensity global','smoothed trajectory'],true,Method of reducing CPR replicates to final tracking result.,'maxdensity','']
      - DensitySigma: ['Density length scale',float,true,"Length scale (in pixels) for Gaussian kernel used during pruning. Used for 'maxdensity', 'maxdensity global', and 'smoothed trajectory' methods. Larger values include more distant shapes when computing a given shape's likelihood.",5,'']
      - PositionLambdaFactor: ['Trajectory smoothing weight factor',float,true,"Scale factor applied to empirically-estimated ratio balancing trajectory smoothness against replicate density. Larger values upweight smoother trajectories. Used only for 'smoothed trajectory' method.",1,'']